import tkinter as tk
import requests
from tkinter import scrolledtext, messagebox

# Genius API access token (replace with your own token)
GENIUS_ACCESS_TOKEN = 'YOUR_GENIUS_API_ACCESS_TOKEN'

# Function to fetch lyrics from Genius API
def fetch_lyrics():
    query = entry_song.get()
    if not query:
        messagebox.showwarning("Warning", "Please enter a song title.")
        return
    
    headers = {'Authorization': f'Bearer {GENIUS_ACCESS_TOKEN}'}
    base_url = 'https://api.genius.com'
    search_url = f'{base_url}/search'
    params = {'q': query}
    
    try:
        response = requests.get(search_url, params=params, headers=headers)
        response.raise_for_status()
        data = response.json()
        
        # Extract the URL of the first search result (assuming it's the correct song)
        song_url = data['response']['hits'][0]['result']['url']
        
        # Fetch lyrics from the song URL
        lyrics_response = requests.get(song_url)
        lyrics_response.raise_for_status()
        
        # Parse the lyrics from the HTML content
        from bs4 import BeautifulSoup
        soup = BeautifulSoup(lyrics_response.text, 'html.parser')
        lyrics = soup.find('div', class_='lyrics').get_text()
        
        # Display lyrics in the scrolled text widget
        text_lyrics.configure(state=tk.NORMAL)
        text_lyrics.delete(1.0, tk.END)  # Clear previous content
        text_lyrics.insert(tk.END, lyrics.strip())
        text_lyrics.configure(state=tk.DISABLED)
    
    except requests.exceptions.RequestException as e:
        messagebox.showerror("Error", f"Error fetching lyrics: {str(e)}")

# Create the main window
root = tk.Tk()
root.title("Lyrics Extractor")

# Create a label and entry for song title input
label_song = tk.Label(root, text="Enter Song Title:")
label_song.pack(pady=10)
entry_song = tk.Entry(root, width=50)
entry_song.pack(pady=5)

# Create a button to fetch lyrics
fetch_button = tk.Button(root, text="Fetch Lyrics", command=fetch_lyrics)
fetch_button.pack(pady=10)

# Create a scrolled text widget to display lyrics
text_lyrics = scrolledtext.ScrolledText(root, width=60, height=20, wrap=tk.WORD)
text_lyrics.pack(padx=10, pady=10)
text_lyrics.configure(state=tk.DISABLED)  # Initially disabled for read-only

# Run the main event loop
root.mainloop()
